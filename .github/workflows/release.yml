name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, dom, curl, libxml, zip

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-8.3-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run tests
        run: composer test

      - name: Run quality checks
        run: composer quality

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Generate changelog for this version
          echo "## Changes in v$VERSION" > release_notes.md
          echo "" >> release_notes.md
          
          # Get the previous tag using git tag list
          ALL_TAGS=$(git tag --sort=-version:refname)
          CURRENT_TAG="v$VERSION"
          PREV_TAG=$(echo "$ALL_TAGS" | grep -A1 "^$CURRENT_TAG$" | tail -1)
          echo "All tags: $ALL_TAGS"
          echo "Current tag: $CURRENT_TAG"
          echo "Previous tag: $PREV_TAG"
          
          if [ -n "$PREV_TAG" ]; then
            echo "### What's Changed" >> release_notes.md
            git log --pretty=format:"- %s" $PREV_TAG..HEAD >> release_notes.md
            echo "" >> release_notes.md
          fi
          
          # Migration Guide - check for breaking changes
          BREAKING_CHANGES=$(git log --pretty=format:"%s" --grep="BREAKING CHANGE\|breaking" $PREV_TAG..HEAD)
          if [ -n "$BREAKING_CHANGES" ]; then
            echo "### ðŸš¨ Migration Guide" >> release_notes.md
            echo "**BREAKING CHANGES** - This release contains breaking changes." >> release_notes.md
            echo "" >> release_notes.md
            echo "**Breaking Changes:**" >> release_notes.md
            echo "$BREAKING_CHANGES" >> release_notes.md
            echo "" >> release_notes.md
          else
            echo "### ðŸš€ Migration Guide" >> release_notes.md
            echo "**No breaking changes** - This release maintains full backward compatibility." >> release_notes.md
            echo "" >> release_notes.md
          fi
          
          # Installation instructions
          echo "### ðŸ“¦ Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "composer require lukaszzychal/tvmaze-client-php:^$VERSION" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          
          # Full changelog link
          if [ -n "$PREV_TAG" ]; then
            echo "**Full Changelog**: https://github.com/$GITHUB_REPOSITORY/compare/$PREV_TAG...v$VERSION" >> release_notes.md
          else
            echo "**Full Changelog**: https://github.com/$GITHUB_REPOSITORY/releases/tag/v$VERSION" >> release_notes.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update composer.json version
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          VERSION=${VERSION#v}
          composer config version $VERSION
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add composer.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update version to $VERSION"
            git push origin main
          fi
